# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      env:
        GOOS: linux
        CGO_ENABLED: 0
      run: go build -o frontendApp ./cmd/web
#       run: go build -o ${{ env.BUILD_BINARY }} ./cmd/web

#     - name: Test
#       run: go test -v ./...

    - name: Generate Dynamic Tag
      id: generate-tag
      run: echo "tag=${{ steps.extract_branch.outputs.branch }}-build-${{ github.run_number }}"
#       outputs:
#         tag: "${{ steps.generate-tag.outputs.tag }}"
      
    - name: Print generate-tag
      run: echo "Login status:${{ steps.generate-tag.outputs.tag }}"
      
    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
      id: login

    - name: Build Docker Image
      uses: docker/build-push-action@v2
      with:
        push: true
        tags: loctrandocker/frontend-service:${{ steps.generate-tag.outputs.tag }}
        context: .
        build-args: |
          GOOS=linux
          GOARCH=amd64

#     - name: Push Docker Image
#       uses: docker/push-action@v1
#       with:
#         tags: loctrandocker/frontend-service:${{ steps.generate-tag.outputs.tag }}

    - name: Debug
      run: |
        pwd

